<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:viewModels="clr-namespace:ImageCare.UI.Avalonia.ViewModels"
             xmlns:domain="clr-namespace:ImageCare.UI.Avalonia.ViewModels.Domain"
             xmlns:iconPacks="https://github.com/MahApps/IconPacks.Avalonia"
             xmlns:avaloniaProgressRing="clr-namespace:AvaloniaProgressRing;assembly=AvaloniaProgressRing"
             x:Class="ImageCare.UI.Avalonia.Views.FoldersView"
             prism:ViewModelLocator.AutoWireViewModel="True"
             x:DataType="viewModels:FoldersViewModel">

    <UserControl.KeyBindings>
        <KeyBinding Command="{Binding CreateFolderCommand}" Gesture="F7" />
        <KeyBinding Command="{Binding DeleteFolderCommand}" Gesture="Delete" />
    </UserControl.KeyBindings>

    <Grid Margin="{StaticResource MarginAll.Small}">

        <TreeView ItemsSource="{Binding FileSystemItemViewModels}"
                  SelectedItem="{Binding SelectedFileSystemItem}"
                  SelectionMode="Single">

            <TreeView.Styles>
                <Style Selector="TreeViewItem" x:DataType="domain:DirectoryViewModel">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                </Style>
            </TreeView.Styles>

            <TreeView.DataTemplates>
                <TreeDataTemplate DataType="domain:DeviceViewModel" ItemsSource="{Binding ChildFileSystemItems}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial Kind="DesktopClassic"
                                                    Height="{StaticResource Icon.Size.Small}"
                                                    Width="{StaticResource Icon.Size.Small}"
                                                    Margin="{StaticResource MarginHorizontal.Small}" />
                        <TextBlock Text="{Binding Name}"
                                   Margin="{StaticResource MarginHorizontal.Small}" />
                    </StackPanel>

                </TreeDataTemplate>
                <TreeDataTemplate DataType="domain:FixedDriveViewModel" ItemsSource="{Binding ChildFileSystemItems}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial Kind="Harddisk"
                                                    Height="{StaticResource Icon.Size.Small}"
                                                    Width="{StaticResource Icon.Size.Small}"
                                                    Margin="{StaticResource MarginHorizontal.Small}" />
                        <TextBlock Text="{Binding Name}"
                                   Margin="{StaticResource MarginHorizontal.Small}" />
                    </StackPanel>
                </TreeDataTemplate>
                <TreeDataTemplate DataType="domain:NetworkDriveViewModel" ItemsSource="{Binding ChildFileSystemItems}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial Kind="FolderNetworkOutline"
                                                    Height="{StaticResource Icon.Size.Small}"
                                                    Width="{StaticResource Icon.Size.Small}"
                                                    Margin="{StaticResource MarginHorizontal.Small}" />
                        <TextBlock Text="{Binding Name}"
                                   Margin="{StaticResource MarginHorizontal.Small}" />
                    </StackPanel>
                </TreeDataTemplate>
                <TreeDataTemplate DataType="domain:RemovableDriveViewModel"
                                  ItemsSource="{Binding ChildFileSystemItems}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial Kind="Sd"
                                                    Height="{StaticResource Icon.Size.Small}"
                                                    Width="{StaticResource Icon.Size.Small}"
                                                    Margin="{StaticResource MarginHorizontal.Small}" />
                        <TextBlock Text="{Binding Name}"
                                   Margin="{StaticResource MarginHorizontal.Small}" />
                    </StackPanel>
                </TreeDataTemplate>
                <TreeDataTemplate x:DataType="domain:DirectoryViewModel" ItemsSource="{Binding ChildFileSystemItems}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial Kind="FolderOutline"
                                                    Height="{StaticResource Icon.Size.Small}"
                                                    Width="{StaticResource Icon.Size.Small}"
                                                    Margin="{StaticResource MarginHorizontal.Small}">
                            <iconPacks:PackIconMaterial.IsVisible>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                    <Binding Path="!IsExpanded" />
                                    <Binding Path="!HasSupportedMedia" />

                                </MultiBinding>
                            </iconPacks:PackIconMaterial.IsVisible>
                        </iconPacks:PackIconMaterial>

                        <iconPacks:PackIconMaterial Kind="FolderOpenOutline"
                                                    Height="{StaticResource Icon.Size.Small}"
                                                    Width="{StaticResource Icon.Size.Small}"
                                                    Margin="{StaticResource MarginHorizontal.Small}"
                                                    IsVisible="{Binding IsExpanded}" />

                        <iconPacks:PackIconMaterial Kind="FolderImage"
                                                    Height="{StaticResource Icon.Size.Small}"
                                                    Width="{StaticResource Icon.Size.Small}"
                                                    Margin="{StaticResource MarginHorizontal.Small}">
                            <iconPacks:PackIconMaterial.IsVisible>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                    <Binding Path="!IsExpanded" />
                                    <Binding Path="HasSupportedMedia" />

                                </MultiBinding>
                            </iconPacks:PackIconMaterial.IsVisible>
                        </iconPacks:PackIconMaterial>

                        <avaloniaProgressRing:ProgressRing Width="{StaticResource Icon.Size.Small}"
                                                           Height="{StaticResource Icon.Size.Small}"
                                                           IsActive="True"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"
                                                           Margin="{StaticResource MarginHorizontal.Small}"
                                                           IsVisible="{Binding IsLoaded}" />
                        <ContentPresenter Content="{Binding}"
                                          Classes.IsEditing="{Binding IsEditing}" 
                                          Classes.IsNotEditing="{Binding !IsEditing}"
                                          Margin="{StaticResource MarginHorizontal.Small}">

                            <ContentPresenter.KeyBindings>
                                <KeyBinding Command="{Binding RenameFolderCommand}" Gesture="Enter" />
                            </ContentPresenter.KeyBindings>

                            <ContentPresenter.Resources>
                                <!-- Display Template -->
                                <DataTemplate x:Key="DisplayTemplate"
                                              x:DataType="domain:DirectoryViewModel">
                                    <TextBlock Text="{Binding Name}"/>
                                </DataTemplate>

                                <!-- Edit Template -->
                                <DataTemplate x:Key="EditTemplate"
                                              x:DataType="domain:DirectoryViewModel">
                                    <TextBox Text="{Binding EditableName, UpdateSourceTrigger=PropertyChanged}"
                                             >
                                        <Interaction.Behaviors>
                                            <EventTriggerBehavior EventName="LostFocus">
                                                <InvokeCommandAction Command="{Binding NameTextBoxLostFocusCommand}" />
                                            </EventTriggerBehavior>
                                        </Interaction.Behaviors>
                                    </TextBox>
                                </DataTemplate>
                            </ContentPresenter.Resources>

                            <ContentPresenter.Styles>
                                <Style Selector="ContentPresenter.IsNotEditing">
                                    <Setter Property="ContentTemplate" Value="{StaticResource DisplayTemplate}" />
                                </Style>
                                <Style Selector="ContentPresenter.IsEditing">
                                    <Setter Property="ContentTemplate" Value="{StaticResource EditTemplate}" />
                                </Style>
                            </ContentPresenter.Styles>
                            </ContentPresenter>

                    </StackPanel>
                </TreeDataTemplate>
            </TreeView.DataTemplates>

        </TreeView>
    </Grid>

    <!--Triggers for view loading and unloading. They use for subscribe to the production state changing-->
    <Interaction.Behaviors>
        <EventTriggerBehavior EventName="Loaded">
            <InvokeCommandAction Command="{Binding OnViewLoadedCommand}" />
        </EventTriggerBehavior>
    </Interaction.Behaviors>
</UserControl>